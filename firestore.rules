
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Public read for profiles, but only the user can write to their own document.
    match /users/{userId} {
      // Anyone can read the public profile information
      allow read: if true;
      
      // A user can create their own document upon signup
      // A user can update their own document (e.g., lastLogin, displayName, photoURL, bio)
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User Progress: For tracking course completion, recently viewed, and scores.
    match /userProgress/{userId} {
      // Allow a user to read their own progress for the dashboard.
      // Allow anyone to read all progress docs for the leaderboard.
      allow read: if true;

      // Only the authenticated user can create or update their own progress document.
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Global Announcements: For notifications.
    match /global_announcements/{announcementId} {
      // Anyone can read announcements.
      allow read: if true;
      // Writes should be handled by admins from a secure backend or the console, not by clients.
      allow write: if false; 
    }
    
    // URL Shortener: For creating and resolving short links.
    match /shortenedUrls/{alias} {
      // Anyone can read a document to allow for URL redirection.
      allow read: if true;
      
      // Anyone can create a new short link.
      // For more security, you could restrict this to logged-in users: if request.auth != null;
      allow create: if true;
      
      // Prevent updating or deleting links from the client-side for simplicity.
      allow update, delete: if false;
    }
  }
}
