rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin status
    function isAdmin() {
      // Check if the user is authenticated and if their document in the 'users' collection has isAdmin set to true.
      // Replace 'YOUR_ADMIN_UID_HERE' with the actual UID of your admin user for a fallback check.
      return request.auth != null && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
        request.auth.uid == 'JT6PeEV2i2VOd4jTqXM1x1ZzXFZ2'
      );
    }

    match /users/{userId} {
      // A user can read and update their own data.
      // A user can create their own document, but not overwrite someone else's.
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    match /global_announcements/{announcementId} {
      // Everyone can read announcements.
      allow read: if true;
      // Only admins can write announcements.
      allow write: if isAdmin();
    }

    match /shortenedUrls/{alias} {
      // Anyone can read, create, and update shortened URLs.
      allow read, create, update: if true;
    }
    
    match /userProgress/{userId} {
      // Users can only read and write their own progress document.
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /bugReports/{reportId} {
      // Any authenticated user can create a bug report.
      allow create: if request.auth != null;
      
      // Admins can read/write any report.
      // Users can only read/update their own reports.
      allow read, update, write: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.userId);
    }
  }
}
